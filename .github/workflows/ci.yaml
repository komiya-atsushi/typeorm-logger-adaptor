name: CI

on:
  - push

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14.x

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-modules-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ env.cache-name }}-
            ${{ runner.os }}-node-modules-
            ${{ runner.os }}-

      - run: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Run test
        run: npm run test:ci

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: test-results
          path: __tests__/__results__/jest-junit.xml

  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14.x

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-modules-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ env.cache-name }}-
            ${{ runner.os }}-node-modules-
            ${{ runner.os }}-

      - run: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

      - run: npm run build

      - run: npm run lint
